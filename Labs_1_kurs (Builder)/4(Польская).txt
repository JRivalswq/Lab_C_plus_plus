#pragma hdrstop
#include <iostream>
#include <conio.h>
#include <math.h>
#include <stdio.h>
#include <time.h>
#include <io.h>
using namespace std;

struct Stack {
    char c;
    Stack* next;
};

int  Prior(char a) {
    switch (a) {
    case '*':   case '/':   return 3;
    case '-':   case '+':   return 2;
    case '(':   return 1;
    }
    return 0;
}

Stack* InS(Stack* p, char s)
{
    Stack* t = new Stack;
    t->c = s;
    t->next = p;
    return t;
}

Stack* OutS(Stack* p, char& s)
{
    Stack* t = p;
    s = p->c;
    p = p->next;
    delete t;
    return p;
}
//выведение ОПЗ
double Result(char* str) {
    int  i;        Stack* begin = NULL;
    char ss, ss1, ss2, ssR = 'z' + 1;
    double op1, op2, res = 0, mas[50];

    cout << " Vvedytye znachenia:" << endl;

    for (i = 0; str[i] != '\0'; ++i) {
        ss = str[i];
        if (ss >= 'a' && ss <= 'z') {
            cout << ss << " = ";
            cin >> mas[int(ss - 'a')];
        }
    }
    for (i = 0; str[i] != '\0'; ++i) {
        ss = str[i];
        if (!(ss == '+' || ss == '-' || ss == '*' ||
            ss == '/' || ss == '^'))
            begin = InS(begin, ss);
        else {
            begin = OutS(begin, *&ss2);
            begin = OutS(begin, *&ss1);
            op2 = mas[int(ss2 - 'a')];
            op1 = mas[int(ss1 - 'a')];
            switch (ss) {
            case '+':   res = op1 + op2;   break;
            case '-':   res = op1 - op2;   break;
            case '*':   res = op1 * op2;   break;
            case '/': 
                if (op2 != 0) {
                    res = op1 / op2;
                }
                else {
                    cout << "error(delenie na 0)" << endl;
                    return 0;

                }
                   
            }
            mas[int(ssR - 'a')] = res;
            begin = InS(begin, ssR);
            ssR++;
        }
    }
    return res;
}




int main()
{
    Stack* t,
        * Op = NULL;
    char a, In[81], Out[81];
    int   k, l = 0;
    cout << " Vvedytye vyrazhenue"<<endl;
    cin >> In;

      for (k = 0; In[k] != '\0'; ++k) {

        if ((In[k] == '+' || In[k] == '-' || In[k] == '*' || In[k] == '/') && (In[k - 1] == '+' || In[k - 1] == '-' || In[k - 1] == '*' || In[k - 1] == '/')) {
            cout << "Dva znaka podryad!";
            return 0;
        }
        
        if (In[k] >= 'a' && In[k] <= 'z')
            Out[l++] = In[k];
        else
            if (In[k] == '(')
                Op = InS(Op, In[k]);
            else
                if (In[k] == ')') {
                    while (Op != 0 && (Op->c) != '(') {
                        Op = OutS(Op, a);
                        if (!Op) a = '\0';
                        Out[l++] = a;
                    }

                    t = Op;

                    if (Op == NULL) {
                        cout << "Nevernaya zapis" << endl;
                        system("pause");      //Предотвращение неправильного ввода выражения ( пример ")a*b" )
                        return 0;
                    }
                    Op = Op->next;
                    delete t;

                }
        if (In[k] == '+' || In[k] == '-' || In[k] == '*' || In[k] == '/') {
            while (Op != NULL && Prior(Op->c) >= Prior(In[k])) {
                Op = OutS(Op, a);					//izvlecaem iz steka operacii s > ili = prioritetom
                Out[l++] = a;
            }
            Op = InS(Op, In[k]); 			
        }
    }
    while (Op != NULL) {
        Op = OutS(Op, a);
        Out[l++] = a;
    }
    Out[l] = '\0';
    cout << "\n Polska = " << Out << endl;
    cout << " Result = " << Result(Out) << endl;
    system("pause");
}